import java.util.Scanner;

public class SimpleHalfDiamondPattern {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        // Ask the user to input a number to define the size of the pattern
        System.out.print("Enter number: ");
        int n = scanner.nextInt();

        // Print the first line with just a single '*'
        System.out.println("*");

        // Start building the upper half of the pattern
        for (int i = 1; i <= n; i++) {
            System.out.print("*");  // Print the first '*' in each row

            // Print numbers from 1 up to the current row number
            for (int j = 1; j <= i; j++) {
                System.out.print(j);
            }

            // Print numbers in reverse order back down to 1
            for (int j = i - 1; j >= 1; j--) {
                System.out.print(j);
            }

            System.out.println("*");  // Print the last '*' and move to the next row
        }

        // Now start building the lower half of the pattern
        for (int i = n - 1; i >= 1; i--) {
            System.out.print("*");  // Print the first '*' in each row

            // Print numbers from 1 up to the current row number
            for (int j = 1; j <= i; j++) {
                System.out.print(j);
            }

            // Print numbers in reverse order back down to 1
            for (int j = i - 1; j >= 1; j--) {
                System.out.print(j);
            }

            System.out.println("*");  // Print the last '*' and move to the next row
        }

        // Print the final line with just a single '*'
        System.out.println("*");

        // Close the scanner since we don't need it anymore
        scanner.close();
    }
}
